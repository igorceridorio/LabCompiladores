@nce

/*
  @filename   ok-chk02.kra

  @comment    Teste se a producao das interfaces das classes esta correta. Um metodo
  chamado m_integer_returns_boolean devera ter assinatura (interface)
       boolean m_integer_returns_boolean( int ) 
  Se o metodo se chamar print_String, a sua assinatura devera ser
       void print_String( String s )
  Naturalmente, o nome dos parametros nao importa.

  Note que a interface da classe B deve ser a mesma de A

  */

class A {
   
   private int n;
   private boolean b;
   private String  s;
   
   public void m() {
      this.n = 0;
      this.b = false;
      this.s = "";
   }   
   public boolean m_returns_boolean() {
      return this.b;
   }   
   public void m_integer(int n) {
      this.n = n;
   }   
   public void m_integer_boolean_String(int n, boolean b, String  s) {
      this.n = n;
      this.b = b;
      this.s = s;
      write( this.s );
   }   
   public boolean m_integer_returns_boolean(int n) {
      if (this.n > n) {
         return false;
      }
      else
         return this.b;
   }   
   public boolean m_integer_boolean_String_return(int n, boolean b, String  s) {
      this.s = s;
      if ( b ) {
         return (n + n) > 0;
      }
      else
         return this.b && b;
   }   

}


// A interface de B 'e a mesma de A


class B extends A {
}


class C {
   
   private String  name;
   private boolean letter;
   private int n;
   private int time;
   
   public void method() {
      this.name = "";
      this.letter = false;
      this.n = 0;
      this.time = 0;
   }   
   
   public boolean method_returns_boolean() {
      return this.letter;
   }   
   
   public void method_integer(int n) {
      write( this.name, n, this.time );
      if (this.letter) {
         write( "true" );
      }
      else
         write( "false" );
   }   
   
   public void method_integer_boolean_String(int n, boolean b, String  name) {
      this.name = name;
      write( n );
      if (b) {
         write( 0 );
      }
      else
         write( 1 );
   }   
   
   public boolean method_integer_returns_boolean(int n) {
      return this.n > n;
   }   
   
   public boolean method_integer_boolean_String_r(int n, boolean b, String  name) {
      write( name );
      this.name = name;
      return (this.n > n) && !(b && this.letter) && (this.time > 0);
   }   

}


class Program {
   
   public void run() {
      B b;
      C c;
      
      b = new B();
      b.m();
      c = new C();
      c.method();
   }   

}


